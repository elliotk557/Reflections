Lesson 1:

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed every line that was either removed or added

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If something goes wrong in a later part of a commit history, you could go back to previous commits rather than trying to backtrack with what you have.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    With Manual saves in Git, it makes sure that each save is logical. With Google however it saves every change no matter what.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because these multiple files in Git are linked together and donâ€™t work without each other. The commit could also have a logical change across multiple files rather than 1.

How can you use the commands git log and git diff to view the history of files?

   Git log allows you to see the previous commits in a repository and git diff allows you to see each difference between those commits in the repository.

How might using version control make you more confident to make changes that
could break something?

    Because you have version control, if something goes wrong and does break you can always go into a previous version, where it was working.

Now that you have your workspace set up, what do you want to try using Git for?

    Any possible coding project in the future.



